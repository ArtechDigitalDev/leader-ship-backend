"""Add user journey system tables

Revision ID: 4d9e58619a1b
Revises: df9c843ee268
Create Date: 2025-09-30 09:36:38.610861

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4d9e58619a1b'
down_revision: Union[str, None] = 'df9c843ee268'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_journeys',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('assessment_result_id', sa.Integer(), nullable=False),
    sa.Column('growth_focus_category', sa.String(length=20), nullable=False),
    sa.Column('intentional_advantage_category', sa.String(length=20), nullable=False),
    sa.Column('current_category', sa.String(length=20), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'COMPLETED', 'PAUSED', name='journeystatus'), nullable=False),
    sa.Column('started_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('total_categories_completed', sa.Integer(), nullable=True),
    sa.Column('total_weeks_completed', sa.Integer(), nullable=True),
    sa.Column('total_lessons_completed', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['assessment_result_id'], ['assessment_results.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_journeys_id'), 'user_journeys', ['id'], unique=False)
    op.create_table('user_lessons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('user_journey_id', sa.Integer(), nullable=False),
    sa.Column('daily_lesson_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('LOCKED', 'AVAILABLE', 'COMPLETED', name='lessonstatus'), nullable=False),
    sa.Column('points_earned', sa.Integer(), nullable=True),
    sa.Column('unlocked_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('days_between_lessons', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['daily_lesson_id'], ['daily_lessons.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_journey_id'], ['user_journeys.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_lessons_id'), 'user_lessons', ['id'], unique=False)
    op.create_table('user_progress',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('total_points_earned', sa.Integer(), nullable=True),
    sa.Column('total_lessons_completed', sa.Integer(), nullable=True),
    sa.Column('total_weeks_completed', sa.Integer(), nullable=True),
    sa.Column('total_categories_completed', sa.Integer(), nullable=True),
    sa.Column('current_journey_id', sa.Integer(), nullable=True),
    sa.Column('current_category', sa.String(length=20), nullable=True),
    sa.Column('current_week_number', sa.Integer(), nullable=True),
    sa.Column('current_streak_days', sa.Integer(), nullable=True),
    sa.Column('longest_streak_days', sa.Integer(), nullable=True),
    sa.Column('last_activity_date', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['current_journey_id'], ['user_journeys.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_user_progress_id'), 'user_progress', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_progress_id'), table_name='user_progress')
    op.drop_table('user_progress')
    op.drop_index(op.f('ix_user_lessons_id'), table_name='user_lessons')
    op.drop_table('user_lessons')
    op.drop_index(op.f('ix_user_journeys_id'), table_name='user_journeys')
    op.drop_table('user_journeys')
    # ### end Alembic commands ###
